From bc71785920e671cf4f64f29fe15ad970cf2a14d8 Mon Sep 17 00:00:00 2001
From: Preeti Sachan <preeti.sachan@intel.com>
Date: Wed, 24 Apr 2024 14:44:12 +0530
Subject: [PATCH] sgx: fix gcc v13 build and absl dependencies

Fixed build issue with GCC v13 by including header '<cstdint>'.
Protobuf v22 and later depends on abseil-cpp and abseil-cpp requires C++17.
Find protobuf in CONFIG mode to fixe the absl dependencies.

Ref:
https://git.openembedded.org/meta-openembedded/commit/meta-oe/recipes-devtools/protobuf?id=fb34c7e3fae2ac7412dfb5920dfd1c9aca68427f
https://protobuf.dev/support/migration/#cpp-22

Upstream-Status: Pending

Signed-off-by: Preeti Sachan <preeti.sachan@intel.com>
---
 psw/ae/aesm_service/source/CMakeLists.txt     | 14 ++++---
 .../source/core/ipc/CMakeLists.txt            | 37 ++++++++++++-------
 2 files changed, 31 insertions(+), 20 deletions(-)

diff --git a/psw/ae/aesm_service/source/CMakeLists.txt b/psw/ae/aesm_service/source/CMakeLists.txt
index 07577d60..eb3c66b6 100644
--- a/psw/ae/aesm_service/source/CMakeLists.txt
+++ b/psw/ae/aesm_service/source/CMakeLists.txt
@@ -7,11 +7,9 @@ project(ModularAESM VERSION 0.1.0)
 
 
 # check if protobuf was found
-find_package(Protobuf REQUIRED)
-if(PROTOBUF_FOUND)
-    message ("protobuf found")
-else()
-    message (FATAL_ERROR "Cannot find Protobuf")
+find_package(Protobuf CONFIG QUIET)
+if (NOT Protobuf_FOUND)
+    find_package(Protobuf REQUIRED)
 endif()
 
 # check if CppMicroServices was found
@@ -35,7 +33,11 @@ endif()
 add_definitions("-DOPENSSL_API_COMPAT=10101")
 
 set(CMAKE_CXX_STANDARD_REQUIRED 1)
-set(CMAKE_CXX_STANDARD 11)
+if(CMAKE_VERSION VERSION_LESS "3.8")
+    set(CMAKE_CXX_STANDARD 14)
+elseif(CMAKE_VERSION VERSION_LESS "3.11")
+    set(CMAKE_CXX_STANDARD 17)
+endif()
 set(CMAKE_SKIP_BUILD_RPATH true)
 
 ########## SGX SDK Settings ##########
diff --git a/psw/ae/aesm_service/source/core/ipc/CMakeLists.txt b/psw/ae/aesm_service/source/core/ipc/CMakeLists.txt
index f233595d..016f2a6f 100644
--- a/psw/ae/aesm_service/source/core/ipc/CMakeLists.txt
+++ b/psw/ae/aesm_service/source/core/ipc/CMakeLists.txt
@@ -1,13 +1,15 @@
 aux_source_directory(. IPC_LIB_SRCS)
-PROTOBUF_GENERATE_CPP(PROTO_SRCS PROTO_HDRS messages.proto)
-# Print path to generated files
-message ("PROTO_SRCS = ${PROTO_SRCS}")
-message ("PROTO_HDRS = ${PROTO_HDRS}")
-list(APPEND IPC_LIB_SRCS ${PROTO_SRCS})
-add_library (ipc ${IPC_LIB_SRCS})
+set(ipc_PROTOS messages.proto)
+if(protobuf_MODULE_COMPATIBLE)
+    PROTOBUF_GENERATE_CPP(PROTO_SRCS PROTO_HDRS ${ipc_PROTOS})
+    # Print path to generated files
+    message ("PROTO_SRCS = ${PROTO_SRCS}")
+    message ("PROTO_HDRS = ${PROTO_HDRS}")
+    list(APPEND IPC_LIB_SRCS ${PROTO_SRCS} ${PROTO_HDRS})
+endif()
+add_library (ipc ${IPC_LIB_SRCS} ${ipc_PROTOS})
 target_include_directories(ipc
     PUBLIC
-    ${PROTOBUF_INCLUDE_DIRS}
     ${CMAKE_CURRENT_BINARY_DIR}
     ${PROJECT_SOURCE_DIR}/common
     ${PROJECT_SOURCE_DIR}/core/ipc
@@ -19,10 +21,17 @@ target_include_directories(ipc
     ${PROJECT_SOURCE_DIR}/../../../../external/dcap_source/QuoteGeneration/quote_wrapper/quote/inc
     ${PROJECT_SOURCE_DIR}/../../../../external/dcap_source/QuoteGeneration/pce_wrapper/inc
 )
-
-# link the exe against the libraries
-target_link_libraries(ipc
-    PUBLIC
-    ${PROTOBUF_LIBRARIES}
-)
-
+if(protobuf_MODULE_COMPATIBLE) #Legacy mode
+    target_include_directories(ipc
+        PUBLIC
+        ${PROTOBUF_INCLUDE_DIRS}
+    )
+    # link the exe against the libraries
+    target_link_libraries(ipc
+        PUBLIC
+        ${PROTOBUF_LIBRARIES}
+    )
+else()
+    target_link_libraries(ipc protobuf::libprotobuf)
+    PROTOBUF_GENERATE(TARGET ipc)
+endif()
diff --git a/external/dcap_source/QuoteGeneration/qcnl/inc/qcnl_util.h b/external/dcap_source/QuoteGeneration/qcnl/inc/qcnl_util.h
index 26f7fb1..cdd7921 100644
--- a/external/dcap_source/QuoteGeneration/qcnl/inc/qcnl_util.h
+++ b/external/dcap_source/QuoteGeneration/qcnl/inc/qcnl_util.h
@@ -39,6 +39,7 @@

 #include <string>
 #include <unordered_map>
+#include <cstdint>

 using namespace std;

-- 
2.34.1
